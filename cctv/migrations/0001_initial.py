# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-06 17:26
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('pw', models.CharField(max_length=20)),
                ('pos', models.CharField(max_length=20)),
                ('phonenum', models.CharField(max_length=13)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CCTV',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=20)),
                ('install_date', models.DateTimeField(verbose_name='date installed')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('file_name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(verbose_name='start time')),
                ('end_time', models.DateTimeField(verbose_name='end time')),
                ('CCTV_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cctv.CCTV')),
            ],
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('route', models.CharField(max_length=30)),
                ('location', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_stamp', models.DateTimeField()),
                ('obj_id', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=20)),
                ('obj_color', models.CharField(max_length=20)),
                ('file_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cctv.Files')),
            ],
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('connects', models.ManyToManyField(to='cctv.Neighborhood')),
                ('last', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='last', to='cctv.Neighborhood')),
            ],
        ),
        migrations.CreateModel(
            name='Shoot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CCTV_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cctv.CCTV')),
            ],
        ),
        migrations.CreateModel(
            name='Shoot_space',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('dong', models.CharField(max_length=20)),
                ('building_name', models.CharField(max_length=20)),
                ('flr', models.CharField(max_length=5)),
                ('location', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('records', models.IntegerField()),
                ('time_length', models.IntegerField()),
                ('obj_num', models.IntegerField()),
                ('avg_speed', models.DecimalField(decimal_places=2, max_digits=20)),
                ('avg_size', models.DecimalField(decimal_places=2, max_digits=20)),
                ('file_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cctv.Files')),
            ],
        ),
        migrations.AddField(
            model_name='shoot',
            name='Shoot_space_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cctv.Shoot_space'),
        ),
        migrations.AddField(
            model_name='neighborhood',
            name='space_a',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='A', to='cctv.Shoot_space'),
        ),
        migrations.AddField(
            model_name='neighborhood',
            name='space_b',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='B', to='cctv.Shoot_space'),
        ),
        migrations.AddField(
            model_name='files',
            name='Shoot_space_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cctv.Shoot_space'),
        ),
        migrations.AddField(
            model_name='cctv',
            name='shoots',
            field=models.ManyToManyField(through='cctv.Shoot', to='cctv.Shoot_space'),
        ),
    ]
